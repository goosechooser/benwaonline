version: '3'

services:
    nginx:
        image: nginx:1.13-alpine
        container_name: nginx
        ports:
            - "80:80"
            - "443:443"
        restart: always
        volumes:
            - ./benwaonline/static:/www/benwa.online/static
            - ./nginx/conf.d:/etc/nginx/conf.d
            - ./nginx/vhost.d:/etc/nginx/vhost.d
            - ./nginx/html:/usr/share/nginx/html
            - ./nginx/logs:/var/log/nginx
            - certs:/etc/nginx/certs
        labels:
            com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"

    nginx-gen:
        image: jwilder/docker-gen:0.4.2
        container_name: nginx-gen
        command: -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
        restart: always
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock:ro
            - ./nginx/conf.d:/etc/nginx/conf.d
            - ./nginx/vhost.d:/etc/nginx/vhost.d
            - ./nginx/html:/usr/share/nginx/html
            - ./nginx/logs:/var/log/nginx
            - certs:/etc/nginx/certs:ro
            - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl
        labels:
            com.github.jrcs.letsencrypt_nginx_proxy_companion.docker_gen: "true"

    nginx-ssl:
        image: jrcs/letsencrypt-nginx-proxy-companion:latest
        container_name: nginx-ssl
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ./nginx/conf.d:/etc/nginx/conf.d
            - ./nginx/vhost.d:/etc/nginx/vhost.d
            - ./nginx/html:/usr/share/nginx/html
            - ./nginx/logs:/var/log/nginx
            - certs:/etc/nginx/certs:rw
        restart: always
        environment:
            #- ACME_CA_URI
            - ACME_TOS_HASH=cc88d8d9517f490191401e7b54e9ffd12a2b9082ec7a1d4cec6101f9f1647e7b
            - "NGINX_PROXY_CONTAINER=nginx"
            - "NGINX_DOCKER_GEN_CONTAINER=nginx-gen"

    benwaonline:
        depends_on:
            - nginx-ssl
        image: localhost:5000/benwaonline-rest
        container_name: benwaonline
        restart: unless-stopped
        expose:
            - "443"
            - "80"
        environment:
            - VIRTUAL_HOST=benwa.online,www.benwa.online
            - LETSENCRYPT_HOST=benwa.online,www.benwa.online
            - LETSENCRYPT_EMAIL
            - FLASK_CONFIG=prod
            - API_URL=http://benwaonline-api
            - API_PORT=420
            # - API_AUDIENCE
            # - AUTH0_DOMAIN
            # - AUTH0_CONSUMER_KEY
            # - AUTH0_CONSUMER_SECRET
            - SECURITY_PASSWORD_SALT
            - SECRET_KEY
        command: /usr/local/bin/gunicorn -w 2 -b :80 run:app
        volumes:
            - ./benwaonline/static:/usr/src/app/benwaonline/static

    benwaonline-api:
        build: ./benwaonlineapi
        container_name: benwaonlineapi
        expose:
            - "420"
        restart: unless-stopped
        environment:
            - FLASK_APP=run
            - FLASK_CONFIG=prod
            # - API_AUDIENCE
            # - AUTH0_DOMAIN
            - MYSQL_HOST=mysql
            - MYSQL_PORT=3306
            - MYSQL_USER
            - MYSQL_PASSWORD
        command: /usr/local/bin/gunicorn -w 2 -b :420 run:app

    mysql:
        image: mysql/mysql-server
        container_name: mysql
        restart: unless-stopped
        environment:
            - MYSQL_DATABASE=benwaonline
            - MYSQL_USER
            - MYSQL_PASSWORD
        volumes:
            - mysql-db:/var/lib/mysql:rw
            - ./initdb.d/setup_db.sql:/docker-entrypoint-initdb.d/setup_db.sql

volumes:
    certs:
    mysql-db:

networks:
    default:
        external:
            name: nginx-proxy
